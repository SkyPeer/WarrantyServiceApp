'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = _interopRequireDefault(_seamlessImmutable);

var _actionTypes = require('../constants/actionTypes');

var _request = require('../constants/request');

var _fetchRequest = require('../utils/fetchRequest');

var _fetchRequest2 = _interopRequireDefault(_fetchRequest);

var _fetchFulfill = require('../utils/fetchFulfill');

var _fetchFulfill2 = _interopRequireDefault(_fetchFulfill);

var _fetchReject = require('../utils/fetchReject');

var _fetchReject2 = _interopRequireDefault(_fetchReject);

var _createAddToListAction = require('../utils/createAddToListAction');

var _createAddToListAction2 = _interopRequireDefault(_createAddToListAction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INITIAL_STATE = _extends({}, _request.INIT, {
  value: null,
  request: { meta: null }
});

var getReducer = function getReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _seamlessImmutable2.default)(INITIAL_STATE);
  var action = arguments[1];

  switch (action.type) {
    case _actionTypes.FETCH.for('get').REQUEST:
      return (0, _fetchRequest2.default)(state, action);
    case _actionTypes.FETCH.for('get').FULFILL:
      if (state.value) {
        var newAction = (0, _createAddToListAction2.default)(state, action);
        return (0, _fetchFulfill2.default)(state, newAction);
      }

      return (0, _fetchFulfill2.default)(state, action);
    case _actionTypes.FETCH.for('get').REJECT:
      return (0, _fetchReject2.default)(state, action);
    default:
      return state;
  }
};

exports.default = getReducer;